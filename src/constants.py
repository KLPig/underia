import random
import time

from pygame import constants as pg

random.seed(time.time())


ELEMENT_TYPE_CONSTANT = 49034
DAMAGE_TYPE_CONSTANT = 13829

INFINITY = 2 ** 31 - 1

APRIL_FOOL = False

LANG = 'en'

DEBUG = True

OS = "Windows"
TONE = True
ENTITY_NUMBER = 18
WEB_DEPLOY = False

if not WEB_DEPLOY:
    FLAGS = pg.HWSURFACE | pg.DOUBLEBUF | pg.SRCALPHA | pg.RESIZABLE
    FULLSCREEN = False
else:
    FLAGS = 0
    FULLSCREEN = False
# Graphics
USE_ALPHA = True
EASY_BACKGROUND = False
BLADE_EFFECT_QUALITY = 1
PARTICLES = 1
HEART_BAR = True
FADING_PARTICLE = True

FPS = 120

OS_NICE = -20

LIGHTING = True

MOVER_POS = 10 ** 7

ULTIMATE_AMMO_BONUS = 10000

MUSIC_VOL = 1.0
SOUND_VOL = 1.0

DIFFICULTY = 1

MEMORY_USE = 10 ** 6

def dump_settings():
    return [ELEMENT_TYPE_CONSTANT, DAMAGE_TYPE_CONSTANT, INFINITY, APRIL_FOOL, LANG, DEBUG, OS, TONE, ENTITY_NUMBER,
            WEB_DEPLOY, FLAGS, FULLSCREEN, USE_ALPHA, EASY_BACKGROUND, BLADE_EFFECT_QUALITY, PARTICLES,
            HEART_BAR, FADING_PARTICLE, FPS, OS_NICE, LIGHTING, MOVER_POS, ULTIMATE_AMMO_BONUS, MUSIC_VOL, SOUND_VOL, DIFFICULTY]

def load_settings(settings):
    global ELEMENT_TYPE_CONSTANT, DAMAGE_TYPE_CONSTANT, INFINITY, APRIL_FOOL, LANG, DEBUG, OS, TONE, ENTITY_NUMBER, \
        WEB_DEPLOY, FLAGS, FULLSCREEN, USE_ALPHA, EASY_BACKGROUND, BLADE_EFFECT_QUALITY, PARTICLES,  \
        HEART_BAR, FADING_PARTICLE, FPS, OS_NICE, LIGHTING, MOVER_POS, ULTIMATE_AMMO_BONUS, MUSIC_VOL, SOUND_VOL, DIFFICULTY
    if len(settings) == 23:
        ELEMENT_TYPE_CONSTANT, DAMAGE_TYPE_CONSTANT, INFINITY, APRIL_FOOL, LANG, DEBUG, OS, TONE, ENTITY_NUMBER, \
            WEB_DEPLOY, FLAGS, FULLSCREEN, USE_ALPHA, EASY_BACKGROUND, BLADE_EFFECT_QUALITY, PARTICLES,  \
            HEART_BAR, FADING_PARTICLE, FPS, OS_NICE, LIGHTING, MOVER_POS, ULTIMATE_AMMO_BONUS = settings
    elif len(settings) == 25:
        ELEMENT_TYPE_CONSTANT, DAMAGE_TYPE_CONSTANT, INFINITY, APRIL_FOOL, LANG, DEBUG, OS, TONE, ENTITY_NUMBER, \
            WEB_DEPLOY, FLAGS, FULLSCREEN, USE_ALPHA, EASY_BACKGROUND, BLADE_EFFECT_QUALITY, PARTICLES,  \
            HEART_BAR, FADING_PARTICLE, FPS, OS_NICE, LIGHTING, MOVER_POS, ULTIMATE_AMMO_BONUS, MUSIC_VOL, SOUND_VOL = settings
    elif len(settings) == 26:
        ELEMENT_TYPE_CONSTANT, DAMAGE_TYPE_CONSTANT, INFINITY, APRIL_FOOL, LANG, DEBUG, OS, TONE, ENTITY_NUMBER, \
            WEB_DEPLOY, FLAGS, FULLSCREEN, USE_ALPHA, EASY_BACKGROUND, BLADE_EFFECT_QUALITY, PARTICLES,  \
            HEART_BAR, FADING_PARTICLE, FPS, OS_NICE, LIGHTING, MOVER_POS, ULTIMATE_AMMO_BONUS, MUSIC_VOL, SOUND_VOL, DIFFICULTY = settings
    else:
        raise ValueError("Invalid settings length")
