import sys
import os
import pygame as pg
import random
import time

from src import resources

random.seed(time.time())

def underia_mod_setup():
    pth = sys.modules['__main__'].__file__
    s = '# Underia Mod Setup\n'
    s += '# Auto generated by src.mods.setup.underia_mod_setup()\n'
    s += '# Copyright klpig 2024, all rights not reserved.\n\n'
    s += 'from src import underia, mods\n\n'
    s += '# Basic datas\n'
    s += 'MOD_NAME = \'Mod\'\n'
    s += 'MOD_VERSION = (1, 0, 0)\n'
    s += 'MOD_AUTHOR = \'Author\'\n'
    s += 'MOD_DESCRIPTION = \'Mod description\'\n\n'
    s += '# Mod Contents\n'
    s += 'ITEMS: dict[str, underia.Inventory.Item] = {\n\t\n}\n'
    s += 'RECIPES: list[underia.Recipe] = [\n\t\n]\n'
    s += 'WEAPONS: dict[str, underia.Weapon] = {\n\t\n}\n'
    s += 'PROJECTILE_TYPE = type(underia.Projectiles.Projectile)\n'
    s += 'PROJECTILES: dict[str, PROJECTILE_TYPE] = {\n\t\n}\n'
    s += 'ENTITY_TYPE = type(underia.Entities.Entity)\n'
    s += 'ENTITIES: dict[str, ENTITY_TYPE] = {\n\t\n}\n\n'
    s += '# SETUP_FUNC\n# Code here (import allowed)\n# SETUP_FUNC\n'
    s += '# UPDATE_FUNC\n# Code here (import allowed)\n# UPDATE_FUNC\n'
    s += 'mods.wrap()'

    dir_name = os.path.dirname(pth)
    if not os.path.exists(os.path.join(dir_name, 'assets')):
        os.mkdir(os.path.join(dir_name, 'assets'))
    if not os.path.exists(os.path.join(dir_name, 'assets', 'icon.png')):
        pxl_arr = pg.PixelArray(pg.Surface((8, 8)))
        r = random.randint(0, 255)
        g = random.randint(max(0, 500 - 255 - r), min(255, 500 - r))
        b = 500 - r - g
        pxl_arr[::1, ::1] = (255, 255, 255, 255)
        pxl_arr[::2, ::2] = (r, g, b, 255)
        pxl_arr[1::2, 1::2] = (255 - r, 255 - g, 255 - b, 255)
        surface = pxl_arr.make_surface()
        pg.image.save(surface, os.path.join(dir_name, 'assets', 'icon.png'))
    if not os.path.exists(os.path.join(dir_name, 'assets', 'graphics')):
        os.mkdir(os.path.join(dir_name, 'assets', 'graphics'))
        os.mkdir(os.path.join(dir_name, 'assets', 'graphics', 'items'))
        os.system('cp -r \'%s\' \'%s\'' % (resources.get_path('assets/graphics/items/convert_weapon.py'),
                  os.path.join(dir_name, 'assets/graphics/items/convert_weapon.py')))
    with open(pth, 'w') as f:
        f.write(s)
    print('Mod setup completed.')
